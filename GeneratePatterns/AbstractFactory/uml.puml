@startuml
title Шаблон "Абстрактная Фабрика" на примере интернет-магазина одежды

top to bottom direction

class Client {
    // Клиент, использующий фабрики для создания одежды
}

interface DressFactory {
    // Абстрактный класс для фабрик платьев
    +createAutumnWomensDress() : WomensDressAbstract  // Создает осеннее женское платье
    +createSummerWomensDress() : WomensDressAbstract  // Создает летнее женское платье
    +createSpringWomensDress() : WomensDressAbstract   // Создает весеннее женское платье
}
note right of DressFactory
    Абстрактный класс, определяющий методы
    для создания различных видов женских платьев.
end note

interface SuitFactory {
    // Абстрактный класс для фабрик костюмов
    +createWomensSuit() : WomensSuitAbstract           // Создает женский костюм
    +createMensSuit() : MensSuitAbstract               // Создает мужской костюм
}
note right of SuitFactory
    Абстрактный класс, определяющий методы
    для создания различных видов костюмов.
end note

class ClothingDressFactory implements DressFactory {
    // Конкретная фабрика для создания платьев
    +createAutumnWomensDress() : WomensDressAbstract   // Создает осеннее женское платье
    +createSummerWomensDress() : WomensDressAbstract   // Создает летнее женское платье
    +createSpringWomensDress() : WomensDressAbstract    // Создает весеннее женское платье
}
note right of ClothingDressFactory
    Конкретная реализация фабрики для создания
    женских платьев в зависимости от сезона.
end note

class ClothingSuitFactory implements SuitFactory {
    // Конкретная фабрика для создания костюмов
    +createWomensSuit() : WomensSuitAbstract            // Создает женский костюм
    +createMensSuit() : MensSuitAbstract                // Создает мужской костюм
    +createAutumnMensSuit() : MensSuitAbstract          // Создает осенний мужской костюм
    +createSpringWomensSuit() : WomensSuitAbstract      // Создает весенний женский костюм
}
note right of ClothingSuitFactory
    Конкретная реализация фабрики для создания
    костюмов в зависимости от сезона и пола.
end note

note right of Client
    Клиентский класс, который взаимодействует с
    фабриками для создания платьев и костюмов.
end note

abstract class WomensDressAbstract {
    // Абстрактный класс для всех женских платьев
}
note right of WomensDressAbstract
    Общий интерфейс для всех видов женских платьев.
end note

class AutumnWomensDress extends WomensDressAbstract {
    // Класс для осеннего женского платья
}
note right of AutumnWomensDress
    Конкретная реализация для осеннего платья.
end note

class SpringWomensDress extends WomensDressAbstract {
    // Класс для весеннего женского платья
}
note right of SpringWomensDress
    Конкретная реализация для весеннего платья.
end note

class SummerWomensDress extends WomensDressAbstract {
    // Класс для летнего женского платья
}
note right of SummerWomensDress
    Конкретная реализация для летнего платья.
end note

abstract class WomensSuitAbstract {
    // Абстрактный класс для всех женских костюмов
}
note right of WomensSuitAbstract
    Общий интерфейс для всех видов женских костюмов.
end note

class AutumnWomensSuit extends WomensSuitAbstract {
    // Класс для осеннего женского костюма
}
note right of AutumnWomensSuit
    Конкретная реализация для осеннего женского костюма.
end note

class SpringWomensSuit extends WomensSuitAbstract {
    // Класс для весеннего женского костюма
}
note right of SpringWomensSuit
    Конкретная реализация для весеннего женского костюма.
end note

abstract class MensSuitAbstract {
    // Абстрактный класс для всех мужских костюмов
}
note right of MensSuitAbstract
    Общий интерфейс для всех видов мужских костюмов.
end note

class AutumnMensSuit extends MensSuitAbstract {
    // Класс для осеннего мужского костюма
}
note right of AutumnMensSuit
    Конкретная реализация для осеннего мужского костюма.
end note

class SpringMensSuit extends MensSuitAbstract {
    // Класс для весеннего мужского костюма
}
note right of SpringMensSuit
    Конкретная реализация для весеннего мужского костюма.
end note

Client --> DressFactory :           // Клиент использует фабрику платьев
Client --> SuitFactory   :         // Клиент использует фабрику костюмов
Client --> WomensDressAbstract :     // Клиент использует абстрактный класс платьев
Client --> MensSuitAbstract    :    // Клиент использует абстрактный класс костюмов

@enduml
